import{_ as s,c as a,o as i,a2 as t}from"./chunks/framework.DTU5Z1Qv.js";const c=JSON.parse('{"title":"全局（plugin_system） hooks列表","description":"","frontmatter":{},"headers":[],"relativePath":"hooks/plugin_system_hooks.md","filePath":"hooks/plugin_system_hooks.md","lastUpdated":1711684263000}'),e={name:"hooks/plugin_system_hooks.md"},n=t(`<h1 id="全局-plugin-system-hooks列表" tabindex="-1">全局（plugin_system） hooks列表 <a class="header-anchor" href="#全局-plugin-system-hooks列表" aria-label="Permalink to &quot;全局（plugin_system） hooks列表&quot;">​</a></h1><h2 id="add-page-hook" tabindex="-1">add_page_hook <a class="header-anchor" href="#add-page-hook" aria-label="Permalink to &quot;add_page_hook&quot;">​</a></h2><h4 id="平台支持" tabindex="-1">平台支持 <a class="header-anchor" href="#平台支持" aria-label="Permalink to &quot;平台支持&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">平台</th><th style="text-align:center;">是否支持</th></tr></thead><tbody><tr><td style="text-align:left;">PC</td><td style="text-align:center;">√</td></tr><tr><td style="text-align:left;">H5</td><td style="text-align:center;">√</td></tr><tr><td style="text-align:left;">Mini</td><td style="text-align:center;">√</td></tr></tbody></table><p>新增页面插件，可以为Discuz !Q 3.0新增页面级别的插件。页面插件配置例子：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;pluginName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;custom_page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;plugin_system&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;hookName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add_page_hook&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;platform&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;h5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mini&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;miniPageConfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;navigationBarTitleText&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;插件页面&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="页面路径配置" tabindex="-1">页面路径配置 <a class="header-anchor" href="#页面路径配置" aria-label="Permalink to &quot;页面路径配置&quot;">​</a></h3><p>通过在 config 中填写 path 路径, path路径 以 / 开头</p><h3 id="页面生成端" tabindex="-1">页面生成端 <a class="header-anchor" href="#页面生成端" aria-label="Permalink to &quot;页面生成端&quot;">​</a></h3><p>通过配置 platform 选项，可以控制页面在某一端是否生成</p><p>譬如</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;platform&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;h5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span></code></pre></div><p>我们仅会生成 web 端的对应页面代码，小程序的代码不会被生成，也不会囊括于打包构建出的代码里</p><h3 id="web端注入路径规则" tabindex="-1">web端注入路径规则 <a class="header-anchor" href="#web端注入路径规则" aria-label="Permalink to &quot;web端注入路径规则&quot;">​</a></h3><p>小程序端会将所有的页面插件注入到 /plugin 子路径下</p><p>页面级插件的访问路径：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">域名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;/plugin/&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>如上述配置的web访问路径为: <code>/plugin/123</code></p><h3 id="小程序端注入路径规则" tabindex="-1">小程序端注入路径规则 <a class="header-anchor" href="#小程序端注入路径规则" aria-label="Permalink to &quot;小程序端注入路径规则&quot;">​</a></h3><p>小程序端会将所有的页面插件注入到 /pluginPages 子路径下，同时划分其为子包</p><p>其路径规则为</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/pluginPages/&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;/index</span></span></code></pre></div><p>如上述配置的小程序访问路径为：<code>/pluginPages/123/index</code></p><h3 id="web-端生命周期映射" tabindex="-1">web 端生命周期映射 <a class="header-anchor" href="#web-端生命周期映射" aria-label="Permalink to &quot;web 端生命周期映射&quot;">​</a></h3><p>web 端的生命周期与 React 的标准生命周期一致，可以完全适用</p><p><a href="https://react.docschina.org/learn/your-first-component" target="_blank" rel="noreferrer">https://react.docschina.org/learn/your-first-component</a></p><h3 id="小程序端页面生命周期映射" tabindex="-1">小程序端页面生命周期映射 <a class="header-anchor" href="#小程序端页面生命周期映射" aria-label="Permalink to &quot;小程序端页面生命周期映射&quot;">​</a></h3><p>小程序端，我们劫持了所有 taro 提供的页面级生命周期</p><p>组件级生命周期在对应的插件中直接实现即可</p><p>对应的生命周期列表如下</p><p><a href="https://taro-docs.jd.com/docs/react-page" target="_blank" rel="noreferrer">https://taro-docs.jd.com/docs/react-page</a></p><p>在 页面插件中 注册 对应生命周期 的方法如下</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">componentDidMount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.props.pluginAction.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerLifecycle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;对应生命周期&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.handler);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>其中 对应生命周期 指代我们抽象的所有生命周期，handler 对应其实现方法</p><p>所有 taro 实现的参数，我们通过同样的参数位置返回</p><p>需要返回数据的生命周期，在对应的 handler 中返回即可</p><h3 id="小程序页面信息配置" tabindex="-1">小程序页面信息配置 <a class="header-anchor" href="#小程序页面信息配置" aria-label="Permalink to &quot;小程序页面信息配置&quot;">​</a></h3><p>我们抽象了小程序的页面信息配置到对应插件的 config 中</p><p>仅需要在 config 中对应 View 配置中填写 miniPageConfig 配置即可</p><p>示例</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;miniPageConfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;navigationBarTitleText&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;插件页面&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><p>详细配置项列表</p><p><a href="https://taro-docs.jd.com/docs/page-config" target="_blank" rel="noreferrer">https://taro-docs.jd.com/docs/page-config</a></p>`,43),h=[n];function p(l,o,k,r,d,g){return i(),a("div",null,h)}const u=s(e,[["render",p]]);export{c as __pageData,u as default};
