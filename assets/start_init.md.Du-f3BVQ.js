import{_ as t,c as a,o as i,a2 as e}from"./chunks/framework.DTU5Z1Qv.js";const s="/Discuz-Q-Plugin-Development-documentation/assets/init-1.C2q46HBf.png",n="/Discuz-Q-Plugin-Development-documentation/assets/init-2.BQzcDj9u.png",g=JSON.parse('{"title":"初始化一个插件","description":"","frontmatter":{},"headers":[],"relativePath":"start/init.md","filePath":"start/init.md","lastUpdated":1711684599000}'),o={name:"start/init.md"},c=e('<h1 id="初始化一个插件" tabindex="-1">初始化一个插件 <a class="header-anchor" href="#初始化一个插件" aria-label="Permalink to &quot;初始化一个插件&quot;">​</a></h1><p>当我们需要准备要开发一个插件的时候，我们可以先使用 <code>@discuzq/cli</code> 的能力，初始化一个插件的基础模板，在此模板上进一步的开发属于你的插件。</p><h2 id="全局安装cli" tabindex="-1">全局安装cli <a class="header-anchor" href="#全局安装cli" aria-label="Permalink to &quot;全局安装cli&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @discuzq/cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre></div><h2 id="开始初始化" tabindex="-1">开始初始化 <a class="header-anchor" href="#开始初始化" aria-label="Permalink to &quot;开始初始化&quot;">​</a></h2><p>通过命令行工具，进入一个你指定的目录下，然后运行 <code>dzq plugin -i</code>。进入交互面板按照提示完成初始化的信息录入。</p><p><img src="'+s+'" alt="初始化"></p><p>根据提示完成信息录入后，<code>cli</code>会自定完成插件项目的创建和依赖安装。完成后可以使用你喜欢的代码编辑打开项目，可以看到以下的目录结构：</p><p><img src="'+n+'" alt="目录结构"></p><blockquote><p>脚手架会默认帮你创建一个最基本的插件</p></blockquote>',10),l=[c];function p(r,d,h,_,u,m){return i(),a("div",null,l)}const b=t(o,[["render",p]]);export{g as __pageData,b as default};
