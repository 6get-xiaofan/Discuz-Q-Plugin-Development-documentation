import{_ as s,c as t,o as i,a2 as a}from"./chunks/framework.DTU5Z1Qv.js";const c=JSON.parse('{"title":"通用参数","description":"","frontmatter":{},"headers":[],"relativePath":"hooks/common_props.md","filePath":"hooks/common_props.md","lastUpdated":1711684599000}'),e={name:"hooks/common_props.md"},l=a(`<h1 id="通用参数" tabindex="-1">通用参数 <a class="header-anchor" href="#通用参数" aria-label="Permalink to &quot;通用参数&quot;">​</a></h1><p>每个钩子都会用以下基本的参数提供给每个插件使用。参数都会携带在组件的<code>props</code>中。</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">值类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">siteData</td><td style="text-align:left;">object</td><td style="text-align:left;">站点配置信息，由/apiv3/forum接口，返回数据</td></tr><tr><td style="text-align:left;">userInfo</td><td style="text-align:left;">object</td><td style="text-align:left;">当前用户信息（没有登录为null）</td></tr><tr><td style="text-align:left;">isLogin</td><td style="text-align:left;">function(): boolean</td><td style="text-align:left;">是否登录</td></tr><tr><td style="text-align:left;">pluginStore</td><td style="text-align:left;">object</td><td style="text-align:left;">插件全局存放数据</td></tr><tr><td style="text-align:left;">pluginAction</td><td style="text-align:left;">object</td><td style="text-align:left;">操作插件数据操作</td></tr><tr><td style="text-align:left;">dzqRouter</td><td style="text-align:left;">object</td><td style="text-align:left;">当前路由信息对象</td></tr><tr><td style="text-align:left;">dzqRequest</td><td style="text-align:left;">object</td><td style="text-align:left;">发起网络请求的对象</td></tr><tr><td style="text-align:left;">dzqRequestHandleError</td><td style="text-align:left;">function</td><td style="text-align:left;">请求错误统一处理函数</td></tr><tr><td style="text-align:left;">_pluginInfo</td><td style="text-align:left;">object</td><td style="text-align:left;">当前插件信息</td></tr></tbody></table><h2 id="pluginstore" tabindex="-1">pluginStore <a class="header-anchor" href="#pluginstore" aria-label="Permalink to &quot;pluginStore&quot;">​</a></h2><p>每一个插件在注入到Discuz !Q时，底层会对插件的<code>pluginName</code>创建一个全局的存储空间，能跨插件或相同插件注入不同钩子中相互公用数据。</p><blockquote><p>默认只会传入当前插件的数据，例如当前你的插件是A，那么你只能获取到pluginStore中A作用域下的数据。</p></blockquote><h2 id="pluginaction" tabindex="-1">pluginAction <a class="header-anchor" href="#pluginaction" aria-label="Permalink to &quot;pluginAction&quot;">​</a></h2><p>每个插件都会获取到<code>pluginAction</code>，其中<code>pluginAction</code>包含2个函数。</p><ul><li>set(pluginName, data)</li><li>get(pluginName)</li></ul><p>考虑到插件之间可能存在数据的共享和操作，所以为每个插件提供相关的操作能力，插件应该尽量避免使用<code>set</code>函数，跨插件的修改数据可能会影响别的插件！！！</p><blockquote><p>注意，每次执行set函数时，应该先用get函数获取对应插件命名空间的数据，进行修改后，作为第二个参数传入。</p></blockquote><h2 id="dzqrouter" tabindex="-1">dzqRouter <a class="header-anchor" href="#dzqrouter" aria-label="Permalink to &quot;dzqRouter&quot;">​</a></h2><p>dzqRouter是处理当前站点的跳转处理以及当前路由信息返回的一个对象，可以通过打印看到内部结构取值使用。 详细文档<a href="./../other/src_router.html">SDK</a></p><h2 id="dzqrequest-dzqrequesthandleerror" tabindex="-1">dzqRequest &amp; dzqRequestHandleError <a class="header-anchor" href="#dzqrequest-dzqrequesthandleerror" aria-label="Permalink to &quot;dzqRequest &amp; dzqRequestHandleError&quot;">​</a></h2><p>dzqRequest是基于Discuz !Q全站统一请求库进行请求，默认会配置好相关的用户状态携带，默认域名和统一的错误处理。</p><p>可以参考以下简单实例，按照实际情况进行改写。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createRegister</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(opt) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">others</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> opt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 请求地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;POST&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 请求方式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        params, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 请求路径携带参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        data, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 请求body参数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">others</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.props.dzqRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatcher</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.props.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dzqRequestHandleError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(error);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,17),n=[l];function h(p,r,d,k,o,g){return i(),t("div",null,n)}const y=s(e,[["render",h]]);export{c as __pageData,y as default};
